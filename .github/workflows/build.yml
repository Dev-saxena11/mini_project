name: build-apk

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install ALL required system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip openjdk-17-jdk python3-pip \
            build-essential libssl-dev libffi-dev \
            libsqlite3-dev libjpeg-dev libfreetype6-dev \
            zlib1g-dev \
            ffmpeg \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            libportmidi-dev \
            libswscale-dev \
            libavformat-dev \
            libavcodec-dev \
            libgstreamer1.0 \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            autoconf \
            automake \
            libtool \
            pkg-config \
            libncurses-dev \
            libncursesw5-dev \
            libtinfo6 \
            cmake \
            gettext \
            libltdl-dev \
            m4

      - name: Download and set up Android SDK
        run: |
          SDK_URL="https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip"
          mkdir -p ${HOME}/android-sdk/cmdline-tools
          curl -o sdk.zip $SDK_URL
          unzip sdk.zip -d ${HOME}/android-sdk/cmdline-tools
          mv ${HOME}/android-sdk/cmdline-tools/cmdline-tools ${HOME}/android-sdk/cmdline-tools/latest
          echo "ANDROID_HOME=${HOME}/android-sdk" >> $GITHUB_ENV
          echo "${HOME}/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "${HOME}/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "${HOME}/android-sdk/build-tools/33.0.2" >> $GITHUB_PATH

      - name: Configure SDK and Accept Licenses
        run: |
          yes | sdkmanager --sdk_root=${ANDROID_HOME} --licenses
          sdkmanager --sdk_root=${ANDROID_HOME} \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.2" \
            "cmdline-tools;latest"

      - name: Setup Android NDK
        run: |
          NDK_URL="https://dl.google.com/android/repository/android-ndk-r25c-linux.zip"
          curl -o ndk.zip $NDK_URL
          unzip ndk.zip -d ${HOME}
          mv ${HOME}/android-ndk-r25c ${HOME}/android-ndk
          echo "ANDROID_NDK_HOME=${HOME}/android-ndk" >> $GITHUB_ENV
          echo "NDK_HOME=${HOME}/android-ndk" >> $GITHUB_ENV

      - name: Cache Buildozer global directory
        uses: actions/cache@v4
        with:
          path: ~/.buildozer
          key: buildozer-${{ hashFiles('**/buildozer.spec') }}

      - name: Install Buildozer and Cython
        run: |
          pip install --upgrade pip
          pip install cython==0.29.33 buildozer

      - name: Build with Buildozer
        run: |
          export PATH="${HOME}/android-sdk/build-tools/33.0.2:$PATH"
          buildozer android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: app-debug.apk
          path: bin/*.apk